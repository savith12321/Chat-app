<!DOCTYPE html>
<html lang="en">
    <head>
        <script src="/js/socket.io.js"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <script type="text/javascript" src="/js/markdownit.js"></script>
        <script type="text/javascript" src="/js/moment.js"></script>
        <script type="text/javascript" src="/js/jquery.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css" rel="stylesheet">
        <link href="/css/index.css" rel="stylesheet">
        <title>Chat App</title>
    </head>
    <body>
        <div class="online-bar">
            <center>
                <h1 class="online_title">online</h1>
            </center>
            <br>
            <center>
                <div class="online_bar"></div>
            </center>
        </div>
        <div id="message_container" class="scroll"></div>
        <div class="input-group dock-bottom">
            <input type="text" class="form-control" placeholder="Type a Message To Send" id='message_input'>
            <button class="btn btn-outline-secondary" type="button" id="button-addon2" onclick="sendMessage()">Send</button>
        </div>
        <script>
             if (Notification.permission !== "denied") {
                Notification.requestPermission().then(function (permission) {
                    console.log("asked for notification perms")
                });
            }
            var md = window.markdownit().enable(['link']).enable('image');
            var room = "<%= room %>"
            const name = prompt("Please type a user name");
            console.log(name)
            if (name == undefined || name == null || name == "") {
                window.location = "/error?message=the user name cant be null";
            } else if (name.toLowerCase().indexOf("|") != -1) {
                window.location = "/error?message=the user name contains invalid character \"|\"";
            }
            window.addEventListener('beforeunload', function() {
                socket.emit("disconnected", name)
            }, false);
            const socket = io.connect("<%= url %>");
            socket.emit("joinRoom", {room: room, name: name});
            socket.emit("online_bar_add", {username: name, room: room});

            document.addEventListener("keyup", function(event) {
                if (event.keyCode === 13) {
                    sendMessage();
                }
            });
            socket.on("message", (data)=>{
                if(data.isAdmin == true){
                    document.getElementById("message_container").innerHTML += `<div class="message-holder rounded-lg"><p class="name"><span class="date text-gray-300">${data.time}</span> <b class="pl-2"><span class="badge bg-secondary bg-blue"><i class="fas fa-user-shield"></i> Admin</span> ${md.render(data.username)}</b>  <div class="message_text">${md.render(data.text)}</div></p></div>`;
                }else if(data.isBot == true){
                    document.getElementById("message_container").innerHTML += `<div class="message-holder rounded-lg"><p class="name"><span class="date text-gray-300">${data.time}</span> <b class="pl-2"><span class="badge bg-secondary bg-blue"><i class="fas fa-robot"></i> Bot</span> ${md.render(data.username)}</b>  <div class="message_text">${md.render(data.text)}</div></p></div>`;
                }else{
                    document.getElementById("message_container").innerHTML += `<div class="message-holder rounded-lg"><p class="name"><span class="date text-gray-300">${data.time}</span> <b class="pl-2"> ${md.render(data.username)}</b>  <div class="message_text">${md.render(data.text)}</div></p></div>`;
                }
                var message_container = document.getElementById("message_container")
                message_container.scrollTo(0, message_container.scrollHeight);
                var anchors = document.getElementsByTagName('a');
                for (var i = 0; i < anchors.length; i++) {
                    anchors[i].setAttribute('target', '_blank');
                }
                if (document.hasFocus() == false){
                    if (Notification.permission === "granted") {
                        Notify(data.username, data.text)
                    }
                    else if (Notification.permission !== "denied") {
                        Notification.requestPermission().then(function (permission) {
                            if (permission === "granted") {
                                Notify(data.username, data.text)
                            }
                         });
                    }
                }
                function Notify(username, message){
                    const notification = new Notification(`Message from ${username}`, {
                        body: message
                    });

                    notification.onclick = (e) =>{
                        location.href = location.href;
                    }
                }
            }
            );
            socket.on("disconnected", (data)=>{
                document.getElementById(data).remove();
            }
            )
            socket.on("online_bar_add", (data)=>{
                var name = data.username
                var id = data.id

                var online_bar = document.querySelector(".online_bar").innerHTML += `<h6 id="${id}">${md.render(name)}</h6>`;
            }
            );
            const sendMessage = ()=>{
                const input_box = document.getElementById("message_input");
                var message_to_send = input_box.value;
                message_to_send = message_to_send.replace(":)", "😊")
                message_to_send = message_to_send.replace("<3", "❤️")
                if (message_to_send == null || message_to_send == undefined || message_to_send == "")
                    return
                input_box.value = "";
                var time = moment().format('h:mm a');
                socket.emit("message", {username : name, message: message_to_send, time: time, admin: <%= admin %> , room: room, bot: false})
                
            }
        </script>
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Fruktur&display=swap'); 
            @import url('https://fonts.googleapis.com/css2?family=Satisfy&display=swap'); 
            #message_container {
                background-color: #36393f;
                width: 183.3vh;
                height: 95vh;
                color: white;
            }

            .dock-bottom {
                position: fixed;
                bottom: 0;
                padding-bottom: 2px;
            }

            .online-bar {
                height: 94.6vh;
                width: 200px;
                position: fixed;
                right: 0;
                color: white;
            }

            .online_title {
                font-family: Satisfy;
                font-size: 300%;
            }

            ::-webkit-scrollbar {
                width: 16px;
            }

            ::-webkit-scrollbar-thumb {
                height: 56px;
                border-radius: 8px;
                border: 4px solid transparent;
                background-clip: content-box;
                background-color: #202225;
            }

            ::-webkit-scrollbar-track {
                background: #2e3338;
            }

            .scroll {
                overflow-y: scroll !important;
            }

            .online-bar {
                background-color: #202225;
            }

            .online_bar {
                background-color: #202225;
            }

            #message_input {
                background-color: #40444b !important;
                border: none;
                color: #ffffff;
            }

            body {
                background-color: #2e3338;
                color: whitesmoke;
            }

            img {
                width: 250px;
                height: 250px;
            }

            .date {
                font-size: 10px;
            }

            p {
                display: inline
            }

            .message-holder:hover {
                background-color: #32353b;
            }

            .bg-blue {
                background-color: #5865f2 !important;
            }

            .message_text {
                font-size: 1rem;
                display : inline
            }
        </style>
    </body>
</html>
