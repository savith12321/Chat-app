<!DOCTYPE html>
<html lang="en">
    <head>
        <script src="/js/socket.io.js"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <script type="text/javascript" src="/js/markdownit.js"></script>
        <title>Chat App</title>
    </head>
    <body>
        <div class="online-bar">
            <center>
                <h1 class="online_title">online</h1>
            </center>
            <br>
            <center>
                <div class="online_bar"></div>
            </center>
        </div>
        <div id="message_container" class="scroll"></div>
        <div class="input-group dock-bottom">
            <input type="text" class="form-control" placeholder="Type a Message To Send" id='message_input'>
            <button class="btn btn-outline-secondary" type="button" id="button-addon2" onclick="sendMessage()">Send</button>
        </div>
        <script>
            var md = window.markdownit().enable(['link']).enable('image');
            const name = prompt("Please type a user name");
            console.log(name)
            if (name == undefined || name == null || name == "") {
                window.location = "/error?message=the user name cant be null";
            } else if (name.toLowerCase().indexOf("|") != -1) {
                window.location = "/error?message=the user name contains invalid character \"|\"";
            }
            window.addEventListener('beforeunload', function() {
                socket.emit("disconnected", name)
            }, false);
            const socket = io.connect("http://localhost:3000");
            socket.emit("online_bar_add", name)

            document.addEventListener("keyup", function(event) {
                if (event.keyCode === 13) {
                    sendMessage();
                }
            });
            socket.on("message", (data)=>{
                document.getElementById("message_container").innerHTML += data;
                var message_container = document.getElementById("message_container")
                message_container.scrollTo(0, message_container.scrollHeight);
                var anchors = document.getElementsByTagName('a');
                for (var i = 0; i < anchors.length; i++) {
                    anchors[i].setAttribute('target', '_blank');
                }
            }
            );
            socket.on("disconnected", (data)=>{
                document.getElementById(data).remove();
            }
            )
            socket.on("online_bar_add", (data)=>{
                var name = data.split("|")[0]
                var id = data.split("|")[1]

                var online_bar = document.querySelector(".online_bar").innerHTML += `<h6 id="${id}">${md.render(name)}</h6>`;
            }
            );
            const sendMessage = ()=>{
                const input_box = document.getElementById("message_input");
                const message_to_send = input_box.value;
                if (message_to_send == null || message_to_send == undefined || message_to_send == "")
                    return
                input_box.value = "";
                function formatAMPM(date) {
                    var hours = date.getHours();
                    var minutes = date.getMinutes();
                    var ampm = hours >= 12 ? 'pm' : 'am';
                    hours = hours % 12;
                    hours = hours ? hours : 12;
                    // the hour '0' should be '12'
                    minutes = minutes < 10 ? '0' + minutes : minutes;
                    var strTime = hours + ':' + minutes + ' ' + ampm;
                    return strTime;
                }
                socket.emit("message", `<div class="message-holder"><hr><p class="name"><span class="date text-muted">${formatAMPM(new Date)}</span> <b class="pl-2">${md.render(name)}</b>  ${md.render(message_to_send)}</p><hr></div>`)
            }
        </script>
        <style>
            @import url('https://fonts.googleapis.com/css2?family=Fruktur&display=swap'); @import url('https://fonts.googleapis.com/css2?family=Satisfy&display=swap'); #message_container {
                background-color: #36393f;
                width: 169.8vh;
                height: 95vh;
                color: white;
            }

            .dock-bottom {
                position: fixed;
                bottom: 0;
                padding-bottom: 2px;
            }

            .online-bar {
                height: 94.6vh;
                width: 200px;
                position: fixed;
                right: 0;
                color: white;
            }

            .online_title {
                font-family: Satisfy;
            }

            ::-webkit-scrollbar {
                width: 16px;
            }

            ::-webkit-scrollbar-thumb {
                height: 56px;
                border-radius: 8px;
                border: 4px solid transparent;
                background-clip: content-box;
                background-color: #202225;
            }

            ::-webkit-scrollbar-track {
                background: #2e3338;
            }

            .scroll {
                overflow-y: scroll !important;
            }

            .online-bar {
                background-color: #202225;
            }

            .online_bar {
                background-color: #202225;
            }

            #message_input {
                background-color: #40444b !important;
                border: none;
                color: #ffffff;
            }

            body {
                background-color: #2e3338;
                color: whitesmoke;
            }

            img {
                width: 250px;
                height: 250px;
            }

            .date {
                font-size: 10px;
            }

            p {
                display: inline
            }
            .message-holder:hover {
                background-color: #32353b;
            }
        </style>
    </body>
</html>
